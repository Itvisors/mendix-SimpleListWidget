// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testsimplelistwidget.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the TestSimpleListWidget module
	public static testsimplelistwidget.proxies.UserContext dS_UserContext(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("TestSimpleListWidget.DS_UserContext").withParams(params).execute(context);
		return result == null ? null : testsimplelistwidget.proxies.UserContext.initialize(context, result);
	}
	public static java.util.List<testsimplelistwidget.proxies.SalesOrder> dSL_SalesOrder(IContext context, testsimplelistwidget.proxies.UserContext _userContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("UserContext", _userContext == null ? null : _userContext.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("TestSimpleListWidget.DSL_SalesOrder").withParams(params).execute(context);
		java.util.List<testsimplelistwidget.proxies.SalesOrder> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(testsimplelistwidget.proxies.SalesOrder.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<testsimplelistwidget.proxies.SalesOrder> dSL_SalesOrder_Small(IContext context, testsimplelistwidget.proxies.UserContext _userContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("UserContext", _userContext == null ? null : _userContext.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("TestSimpleListWidget.DSL_SalesOrder_Small").withParams(params).execute(context);
		java.util.List<testsimplelistwidget.proxies.SalesOrder> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(testsimplelistwidget.proxies.SalesOrder.initialize(context, obj));
		}
		return result;
	}
	public static testsimplelistwidget.proxies.UserContext sUB_UserContext_GetOrCreate(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("TestSimpleListWidget.SUB_UserContext_GetOrCreate").withParams(params).execute(context);
		return result == null ? null : testsimplelistwidget.proxies.UserContext.initialize(context, result);
	}
}